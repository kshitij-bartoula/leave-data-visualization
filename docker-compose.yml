version: '3.8'

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  migration:
    build:
      context: ./
      dockerfile: src/migrations/Dockerfile
    depends_on:
      - postgres
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      SQLALCHEMY_DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - app_network

  etl:
    build:
      context: ./
      dockerfile: src/etl/Dockerfile
    restart: always
    depends_on:
      - postgres
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      BEARER_TOKEN: ${BEARER_TOKEN}
      API_ENDPOINT: ${API_ENDPOINT}
      RECIPIENT_EMAIL: ${RECIPIENT_EMAIL}
      SENDER_EMAIL: ${SENDER_EMAIL}
      SENDER_DATA: ${SENDER_DATA}
    networks:
      - app_network

  fastapi:
    build:
      context: ./
      dockerfile: src/backend/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
    networks:
      - app_network

  streamlit:
    build:
      context: ./
      dockerfile: src/streamlit/Dockerfile
    restart: always
    ports:
      - "8502:8502"
    depends_on:
      - fastapi
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
    volumes:
      - ./src/streamlit:/app  # <== This line maps your host code
    networks:
      - app_network

#   plotly-dash:
#     build:
#       context: ./
#       dockerfile: src/visualization/Dockerfile
#     restart: always
#     ports:
#       - "8050:8050"
#     depends_on:
#       - fastapi
#     environment:
#       DB_USERNAME: ${DB_USERNAME}
#       DB_PASSWORD: ${DB_PASSWORD}
#       DB_HOST: ${DB_HOST}
#       DB_NAME: ${DB_NAME}
#     networks:
#       - app_network

volumes:
  pgdata:

networks:
  app_network:
    driver: bridge
