# name: Database Migration

# on:
#   push:
#     branches:
#       - testing_branch
#   pull_request:
#     branches:
#       - testing_branch

# jobs:
#   migrate_database:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Export secrets as environment variables
#         run: |
#           echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
#           echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
#           echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
#           echo "BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}" >> $GITHUB_ENV
#           echo "API_ENDPOINT=${{ secrets.API_ENDPOINT }}" >> $GITHUB_ENV
#           echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> $GITHUB_ENV
#           echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> $GITHUB_ENV

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.x'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Set PYTHONPATH to include src/
#         run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

#       # - name: Test database connection (Optional - For Debugging)
#       #   run: pg_isready -h ${{ secrets.DB_HOST }} -U ${{ secrets.DB_USERNAME }} -d ${{ secrets.DB_NAME }}

#       - name: Print Environment Variables
#         run: echo "$DB_HOST"

#       - name: Print DB Host (Masked in logs)
#         run: echo "${{ secrets.DB_HOST }}"

#       - name: Run database migrations
#         run: python src/db/db_migrate.py --up
#         env:
#           DB_HOST: ${{ secrets.DB_HOST }}
#           DB_NAME: ${{ secrets.DB_NAME }}
#           DB_USERNAME: ${{ secrets.DB_USERNAME }}
#           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

#       - name: Post-migration verification
#         run: |
#           echo "Verifying migration was successful..."
#           # Add any validation or check here
#         if: success()
