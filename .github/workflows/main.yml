name: Deploy self-hosted locally

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4 (latest)
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r src/etl/requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

      - name: Run unit tests
        run: |
          pytest src/etl/tests

  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Clean workspace (if needed)
        run: |
          sudo rm -rf "${{ github.workspace }}" || true  # Only if previous runs leave locked files

      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4
        with:
          fetch-depth: 0
          clean: false  # Skip automatic cleanup to avoid permission issues

      - name: Export secrets as environment variables
        shell: bash
        run: |
          {
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}"
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            echo "DB_HOST=${{ secrets.DB_HOST }}"
            echo "DB_NAME=${{ secrets.DB_NAME }}"
            echo "BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}"
            echo "API_ENDPOINT=${{ secrets.API_ENDPOINT }}"
            echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}"
            echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}"
            echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}"
            echo "SENDER_DATA=${{ secrets.SENDER_DATA }}"
            echo "RECIPIENT_EMAIL=${{ secrets.RECIPIENT_EMAIL }}"
          } >> "$GITHUB_ENV"

      - name: Set up Docker Compose
        run: |
          docker compose up -d --build  # Modern syntax (compose v2)

      - name: Verify deployment
        run: |
          echo "âœ… Deployment successful"
          docker ps -a  # Optional: List containers for debugging