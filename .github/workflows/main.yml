name: Deploy self-hosted locally

on:
  push:
    branches:
      - sync/main
  workflow_dispatch:
    inputs:
      run_migration:
        description: "Run database migration"
        required: false
        default: "false"

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Export secrets as environment variables
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}" >> $GITHUB_ENV
          echo "API_ENDPOINT=${{ secrets.API_ENDPOINT }}" >> $GITHUB_ENV
          echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> $GITHUB_ENV
          echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> $GITHUB_ENV
          echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}" >> $GITHUB_ENV
          echo "SENDER_DATA=${{ secrets.SENDER_DATA }}" >> $GITHUB_ENV
          echo "RECIPIENT_EMAIL=${{ secrets.RECIPIENT_EMAIL }}" >> $GITHUB_ENV

      - name: Set up Docker Compose and build services
        run: |
          docker-compose build postgres pgadmin

      - name: Start services except migration
        run: |
          docker-compose up -d postgres 

      # Conditionally run the migration service when triggered manually
      - name: Run migration service
        if: ${{ inputs.run_migration == 'true' }}
        run: |
          docker-compose up migration  # Trigger migration service manually

      - name: Deployment completed
        run: |
          echo "Deployment completed."
